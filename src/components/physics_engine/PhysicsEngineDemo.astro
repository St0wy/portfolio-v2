<div class="spinner" id="spinner"></div>
<div class="emscripten" id="status">Downloading...</div>
<progress hidden id="progress" max="100" value="0"></progress>

<canvas
    class="emscripten"
    id="canvas"
    oncontextmenu="
    event.preventDefault()
    "
    tabindex="-1"></canvas>

<script is:inline>
var statusElement = document.getElementById("status"),
    progressElement = document.getElementById("progress"),
    spinnerElement = document.getElementById("spinner"),
    Module = {
        preRun: [],
        postRun: [],
        print: (function () { })(),
        canvas: (() => {
            var e = document.getElementById("canvas");
            return (
                e.addEventListener(
                    "webglcontextlost",
                    (e) => {
                        alert(
                            "WebGL context lost. You will need to reload the page."
                        ),
                            e.preventDefault();
                    },
                    !1
                ),
                e
            );
        })(),
        setStatus: (e) => {
            if (
                (Module.setStatus.last ||
                    (Module.setStatus.last = {
                        time: Date.now(),
                        text: "",
                    }),
                    e !== Module.setStatus.last.text)
            ) {
                var t = e.match(/([^(]+)\((\d+(\.\d+)?)\/(\d+)\)/),
                    n = Date.now();
                (t && n - Module.setStatus.last.time < 30) ||
                    ((Module.setStatus.last.time = n),
                        (Module.setStatus.last.text = e),
                        t
                            ? ((e = t[1]),
                                (progressElement.value = 100 * parseInt(t[2])),
                                (progressElement.max = 100 * parseInt(t[4])),
                                (progressElement.hidden = !1),
                                (spinnerElement.hidden = !1))
                            : ((progressElement.value = null),
                                (progressElement.max = null),
                                (progressElement.hidden = !0),
                                e || (spinnerElement.style.display = "none")),
                        (statusElement.innerHTML = e));
            }
        },
        totalDependencies: 0,
        monitorRunDependencies: (e) => {
            (this.totalDependencies = Math.max(this.totalDependencies, e)),
                Module.setStatus(
                    e
                        ? "Preparing... (" +
                        (this.totalDependencies - e) +
                        "/" +
                        this.totalDependencies +
                        ")"
                        : "All downloads complete."
                );
        },
    };
Module.setStatus("Downloading..."), (window.onerror = (e) => { });
</script>
<script async src="/physics_engine_web_demo.js"></script>
